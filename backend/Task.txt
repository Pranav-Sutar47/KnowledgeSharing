const MaterialSchema = new mongoose.Schema({
  title: String,
  description: String,
  type: { type: String, enum: ['pdf', 'ppt', 'video', 'note'] },
  fileUrl: String,  // File location or URL
  uploadedBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
  access: {
    type: String,
    enum: ['facultyOnly', 'allStudents', 'specificBranchOrClass'],
    default: 'allStudents'
  },
  allowedBranches: [String],  // used if access = 'specificBranchOrClass'
  allowedClasses: [String],
  createdAt: { type: Date, default: Date.now },
});


const DoubtSchema = new mongoose.Schema({
  material: { type: mongoose.Schema.Types.ObjectId, ref: 'Material' },
  askedBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
  question: String,
  replies: [
    {
      repliedBy: { type: mongoose.Schema.Types.ObjectId, ref: 'User' },
      reply: String,
      createdAt: { type: Date, default: Date.now }
    }
  ],
  createdAt: { type: Date, default: Date.now }
});


const StudentPostSchema{
  title
  description
  type { type: String, enum: ['pdf', 'ppt', 'video', 'note'] },
  fileUrl
  uploadedBy : ref User
  createdAt: Date
};
